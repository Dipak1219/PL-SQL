-- 1] SUM OF DIGIT
-- FUNCTION BODY
CREATE OR REPLACE FUNCTION SOD(T IN INT) RETURN INT IS
S INT := 0;
R INT;
N INT := T;
BEGIN
    WHILE N > 0 LOOP
        R := MOD(N,10);
        S := S + R;
        N := N/10;
    END LOOP;
    RETURN S;
    END;
    /

-- FUNCTION CALL
DECLARE 
N INT := &N;
Z INT;
BEGIN
    Z := SOD(N);
    DBMS_OUTPUT.PUT_LINE(Z);
END;
/

-- 2] PALINDROME NUMBER
CREATE OR REPLACE FUNCTION PAL(T IN INT) RETURN INT IS
R INT;
S INT :=0;
N INT := T;
BEGIN
    WHILE N > 0 LOOP
        R := MOD(N,10);
        S := S * 10 + R;
        N := N / 10;
    END LOOP;
RETURN S;
END;
/

DECLARE 
N INT := &N;
Z INT;
BEGIN
Z := PAL(N);
IF Z = N THEN 
    DBMS_OUTPUT.PUT_LINE('PALINDROME NUMBER');
ELSE
    DBMS_OUTPUT.PUT_LINE('NOT A PALINDROME NUMBER');
END IF;
END;
/


-- 3] ARMSTRONG NUMBER
CREATE OR REPLACE FUNCTION ARM(T IN INT) RETURN INT IS
R INT;
S INT :=0;
N INT := T;
BEGIN
    WHILE N > 0 LOOP
        R := MOD(N,10);
        S := S + (R*R*R);
        N := TRUNC(N / 10);   --TRUNC() IS MUST 
    END LOOP;
RETURN S;
END;
/

DECLARE 
N INT := &N;
Z INT;
BEGIN
Z := ARM(N);
DBMS_OUTPUT.PUT_LINE(Z);
IF Z = N THEN 
    DBMS_OUTPUT.PUT_LINE('ARMSTRONG NUMBER');
ELSE
    DBMS_OUTPUT.PUT_LINE('NOT A ARMSTRONG NUMBER');
END IF;
END;
/

--4] WRITE A PL-SQL BLOCK OF FACTORIAL NUMBER 
--> 4 => 4*3*2*1 = 24
CREATE OR REPLACE FUNCTION FACT(T IN INT) RETURN INT IS 
F INT := 1;
N INT := T;
I INT;
BEGIN
FOR I IN 1..N LOOP
    F := F * I;
    END LOOP;
RETURN F;
END;
/

DECLARE
N INT := &N;
Z INT;
BEGIN
Z := FACT(N);
DBMS_OUTPUT.PUT_LINE('FACTORIAL OF '||N||' IS:'||Z);
END;
/


-- 5] WRITE A PL/SQL BLOCK WHICH SHOWS SALARY OF GIVEN ID USING FUNCTION
CREATE OR REPLACE FUNCTION DISPLAY(PID IN INT) RETURN INT IS
EID INT := PID;
A INT;
BEGIN
SELECT SALARY INTO A FROM EMP WHERE ID = EID;
RETURN A;
END;
/

DECLARE
EID INT := &EID;
Z INT;
BEGIN 
Z := DISPLAY(EID);
DBMS_OUTPUT.PUT_LINE('SALARY OF ID '||EID||' IS:'||Z);
END;
/

-- 6] update the salary of given id
CREATE OR REPLACE FUNCTION UP(PID INT, S INT) RETURN NUMBER IS
EID INT := PID;
SA INT := S;
BEGIN
UPDATE EMP SET SALARY = SA  WHERE ID = EID;
RETURN 1;
END;
/

DECLARE
PID INT := &PID;
S INT := &S;
Z NUMBER;
BEGIN
Z := UP(PID,S);
if Z = 1 THEN 
DBMS_OUTPUT.PUT_LINE('SALARY UPDATED!');
ELSE
DBMS_OUTPUT.PUT_LINE('SALARY NOT UPDATED!');
END IF;
END;
/

-- 7] RETURN THE NAME OF GIVEN ID
CREATE OR REPLACE FUNCTION DIS_NAME(PID INT) RETURN VARCHAR2 IS
EID INT := PID;
NA_ME VARCHAR2(20);
BEGIN 
SELECT NAME INTO NA_ME FROM EMP WHERE ID = EID;
RETURN NA_ME;
END;
/

DECLARE
PID INT := &PID;
NA_ME VARCHAR2(20);
BEGIN
NA_ME := DIS_NAME(PID);
DBMS_OUTPUT.PUT_LINE('NAME:'||NA_ME);
END;
/

-- 8] create a PL-SQL block funtion  which insert record into a table 
CREATE OR REPLACE FUNCTION INS_REC(EID INT,ENAME VARCHAR2, ESALARY INT) RETURN INT IS
MID INT := EID;
MNAME VARCHAR2(20) := ENAME;
MSALARY INT := ESALARY;
STR INT;
BEGIN
INSERT INTO EMP VALUES(MID,MNAME,MSALARY);
RETURN 1;
END;
/

DECLARE 
EID INT := &EID;
ENAME VARCHAR2(20) := &ENAME;
ESALARY INT := &ESALARY;
Z INT;
BEGIN
Z := INS_REC(EID,ENAME,ESALARY);
IF Z = 1 THEN
DBMS_OUTPUT.PUT_LINE('INSERTED!');
ELSE
DBMS_OUTPUT.PUT_LINE('FAILED!');
END IF;
END;
/
